\BOOKMARK [0][-]{section*.5}{List of Figures}{}% 1
\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 2
\BOOKMARK [1][-]{section.1.1}{What Has Been Achieved This Semester}{chapter.1}% 3
\BOOKMARK [2][-]{subsection.1.1.1}{Miscellaneous Improvements}{section.1.1}% 4
\BOOKMARK [2][-]{subsection.1.1.2}{Compile Time Arguments}{section.1.1}% 5
\BOOKMARK [2][-]{subsection.1.1.3}{Simplified String Comparisons}{section.1.1}% 6
\BOOKMARK [2][-]{subsection.1.1.4}{Suggestions for Mistyped Words}{section.1.1}% 7
\BOOKMARK [2][-]{subsection.1.1.5}{Real \(Float\) Implementation - Phase I}{section.1.1}% 8
\BOOKMARK [2][-]{subsection.1.1.6}{Register Allocator}{section.1.1}% 9
\BOOKMARK [2][-]{subsection.1.1.7}{Real \(Float\) Implementation - Phase II}{section.1.1}% 10
\BOOKMARK [1][-]{section.1.2}{Organization of The Report}{chapter.1}% 11
\BOOKMARK [0][-]{chapter.2}{Work of Last Semester}{}% 12
\BOOKMARK [1][-]{section.2.1}{What Was Achieved This Semester}{chapter.2}% 13
\BOOKMARK [1][-]{section.2.2}{Road Ahead}{chapter.2}% 14
\BOOKMARK [0][-]{chapter.3}{Introduction to RISC V and Runtime}{}% 15
\BOOKMARK [1][-]{section.3.1}{Choosing a Simulator}{chapter.3}% 16
\BOOKMARK [1][-]{section.3.2}{Basic Examples}{chapter.3}% 17
\BOOKMARK [2][-]{subsection.3.2.1}{Hello World}{section.3.2}% 18
\BOOKMARK [2][-]{subsection.3.2.2}{Saving callee save registers}{section.3.2}% 19
\BOOKMARK [1][-]{section.3.3}{Runtime}{chapter.3}% 20
\BOOKMARK [0][-]{chapter.4}{Phase I : Constructing Abstract Syntax Tree}{}% 21
\BOOKMARK [1][-]{section.4.1}{Linking Lexer and Parser}{chapter.4}% 22
\BOOKMARK [1][-]{section.4.2}{Intermediate Error Handling}{chapter.4}% 23
\BOOKMARK [1][-]{section.4.3}{Lexer}{chapter.4}% 24
\BOOKMARK [1][-]{section.4.4}{Key Map}{chapter.4}% 25
\BOOKMARK [1][-]{section.4.5}{Symbols in Tiger}{chapter.4}% 26
\BOOKMARK [1][-]{section.4.6}{Parser}{chapter.4}% 27
\BOOKMARK [0][-]{chapter.5}{Phase II : Constructing Intermediate Representation Tree}{}% 28
\BOOKMARK [1][-]{section.5.1}{Type Interface}{chapter.5}% 29
\BOOKMARK [1][-]{section.5.2}{Types/Variables Environment}{chapter.5}% 30
\BOOKMARK [1][-]{section.5.3}{Finding Escaped Variables}{chapter.5}% 31
\BOOKMARK [1][-]{section.5.4}{Intermediate Tree Representation}{chapter.5}% 32
\BOOKMARK [1][-]{section.5.5}{Understanding Functions Calls in Tiger}{chapter.5}% 33
\BOOKMARK [1][-]{section.5.6}{RISC Frame}{chapter.5}% 34
\BOOKMARK [1][-]{section.5.7}{Translating to IR}{chapter.5}% 35
\BOOKMARK [1][-]{section.5.8}{Semantic Analysis}{chapter.5}% 36
\BOOKMARK [0][-]{chapter.6}{Phase III : Generating Assembly Code}{}% 37
\BOOKMARK [1][-]{section.6.1}{Canonisation}{chapter.6}% 38
\BOOKMARK [2][-]{subsection.6.1.1}{Abstract}{section.6.1}% 39
\BOOKMARK [2][-]{subsection.6.1.2}{Why nodes are an issue?}{section.6.1}% 40
\BOOKMARK [2][-]{subsection.6.1.3}{Why nodes are an issue?}{section.6.1}% 41
\BOOKMARK [1][-]{section.6.2}{Instruction Selection}{chapter.6}% 42
\BOOKMARK [2][-]{subsection.6.2.1}{Instruction Representation}{section.6.2}% 43
\BOOKMARK [2][-]{subsection.6.2.2}{Code Generation}{section.6.2}% 44
\BOOKMARK [2][-]{subsection.6.2.3}{Maximal Munch Algorithm}{section.6.2}% 45
\BOOKMARK [1][-]{section.6.3}{Liveness Analysis and Interference Graph}{chapter.6}% 46
\BOOKMARK [2][-]{subsection.6.3.1}{Liveness Analysis}{section.6.3}% 47
\BOOKMARK [2][-]{subsection.6.3.2}{Interference Graph}{section.6.3}% 48
\BOOKMARK [1][-]{section.6.4}{Register Allocation}{chapter.6}% 49
\BOOKMARK [2][-]{subsection.6.4.1}{Algorithm}{section.6.4}% 50
\BOOKMARK [0][-]{Item.50}{References}{}% 51
